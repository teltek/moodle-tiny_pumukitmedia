define(["editor_tiny/loader","editor_tiny/utils","tiny_pumukitmedia/dialogue","tiny_pumukitmedia/configuration","editor_tiny/options"],(function(t,e,i,n,o){"use strict";function u(t){var e=Object.create(null);return t&&Object.keys(t).forEach((function(i){if("default"!==i){var n=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,n.get?n:{enumerable:!0,get:function(){return t[i]}})}})),e.default=t,Object.freeze(e)}var r=u(n);
/**
     * Tiny Pumukitmedia common values.
     *
     * @module      tiny_pumukitmedia/common
     * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
     */const a="tiny_pumukitmedia/plugin",s="tiny_pumukitmedia",g="pumukitmedia",d=o.getPluginOptionName(a,"pumukitmediaurl"),l=o.getPluginOptionName(a,"dialogtitle"),p=o.getPluginOptionName(a,"username"),m=o.getPluginOptionName(a,"email"),c=o.getPluginOptionName(a,"hash"),f=t=>t.options.get(l);return new Promise((async n=>{const[o,u]=await Promise.all([t.getTinyMCE(),e.getPluginMetadata(s,a)]);o.PluginManager.add(`${s}/plugin`,(t=>((t=>{t.options.register(d,{processor:"string",default:""}),t.options.register(l,{processor:"string",default:""}),t.options.register(p,{processor:"string",default:""}),t.options.register(m,{processor:"string",default:""}),t.options.register(c,{processor:"string",default:""})})(t),t.ui.registry.addButton(g,{icon:"embed",tooltip:f(t)||"Insert PuMuKIT Media",classes:"pumukitmedia-button",onAction:()=>{i.openPumukitDialogue(t)}}),t.ui.registry.addMenuItem(g,{text:"Pumukit Media",icon:"embed",classes:"pumukitmedia-button",onAction:()=>{i.openPumukitDialogue(t)}}),u))),n([`${s}/plugin`,r])}))}));
//# sourceMappingURL=plugin.min.js.map
