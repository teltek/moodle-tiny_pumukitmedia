{"version":3,"file":"dialogue.min.js","sources":["../src/modal.js","../src/common.js","../src/options.js","../src/dialogue.js"],"sourcesContent":["// amd/src/modal.js\n\n/**\n * Abstract Recording Modal for TinyMCE's RecordRTC plugin.\n *\n * @module      tiny_pumukitmedia/modal\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Modal from 'core/modal';\n\nexport default class PumukitModal extends Modal {\n    static TYPE = 'tiny_pumukitmedia/modal';\n    static TEMPLATE = 'tiny_pumukitmedia/modal';\n\n    registerEventListeners() {\n        this.setRemoveOnClose(true);\n        super.registerEventListeners();\n        this.registerCloseOnCancel();\n    }\n}\n\nPumukitModal.registerModalType();\n","// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Pumukitmedia common values.\n *\n * @module      tiny_pumukitmedia/common\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const pluginName = 'tiny_pumukitmedia/plugin';\nexport const component = 'tiny_pumukitmedia';\nexport const pluginButtonName = 'pumukitmedia';\n","/**\n * Options helper for the Moodle Tiny Pumukitmedia plugin.\n *\n * @module      tiny_pumukitmedia/options\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {pluginName} from './common';\nimport {getPluginOptionName} from 'editor_tiny/options';\n\nconst urlOption = getPluginOptionName(pluginName, 'pumukitmediaurl');\nconst titleOption = getPluginOptionName(pluginName, 'dialogtitle');\nconst usernameOption = getPluginOptionName(pluginName, 'username');\nconst emailOption = getPluginOptionName(pluginName, 'email');\nconst hashOption = getPluginOptionName(pluginName, 'hash');\n\nexport const register = (editor) => {\n    editor.options.register(urlOption, {\n        processor: 'string',\n        default: '',\n    });\n    editor.options.register(titleOption, {\n        processor: 'string',\n        default: '',\n    });\n    editor.options.register(usernameOption, {\n        processor: 'string',\n        default: '',\n    });\n    editor.options.register(emailOption, {\n        processor: 'string',\n        default: '',\n    });\n    editor.options.register(hashOption, {\n        processor: 'string',\n        default: '',\n    });\n};\n\n// Funciones de ayuda\nexport const getPumukitUrl = (editor) => editor.options.get(urlOption);\nexport const getDialogTitle = (editor) => editor.options.get(titleOption);\nexport const getUsername = (editor) => editor.options.get(usernameOption);\nexport const getEmail = (editor) => editor.options.get(emailOption);\nexport const getHash = (editor) => editor.options.get(hashOption);\n","// @module tiny_pumukitmedia/dialogue\n\nimport PumukitModal from './modal';\nimport {\n    getDialogTitle,\n    getPumukitUrl,\n    getHash,\n    getUsername,\n    getEmail,\n} from './options';\n\nexport const openPumukitDialogue = async (editor) => {\n    const modaltitle = getDialogTitle(editor);\n    const pumukitUrl = getPumukitUrl(editor);\n    const hash = getHash(editor);\n    const username = getUsername(editor);\n    const email = getEmail(editor);\n    const lang = document.documentElement.lang || 'en';\n\n    const context = {\n        modaltitle,\n        pumukitUrl,\n        hash,\n        username,\n        email,\n        lang\n    };\n\n    try {\n        const modal = await PumukitModal.create({\n            templateContext: context,\n            large: true,\n        });\n\n        modal.show();\n\n        modal.getRoot().one('shown.bs.modal', () => {\n            const root = modal.getRoot();\n            root.find('.nav-tabs a').on('click', function (e) {\n                e.preventDefault();\n                $(this).tab('show');\n            });\n        });\n\n        const receiveMessage = (event) => {\n            const data = event.data;\n            if (!data || (!data.mmId && !data.url && !data.playlist)) return;\n\n            let embedUrl = '';\n            if (data.url) {\n                embedUrl = data.url;\n            } else if (data.playlist) {\n                embedUrl = `${pumukitUrl}/openedx/openedx/playlist/embed/${data.playlist}`;\n            } else if (data.mmId) {\n                embedUrl = `${pumukitUrl}/openedx/openedx/embed/${data.mmId}`;\n            }\n\n            const embedHtml = `\n                <div class=\"embed-responsive embed-responsive-16by9\">\n                    <iframe \n                        class=\"embed-responsive-item\" \n                        src=\"${embedUrl}\" \n                        width=\"100%\" \n                        height=\"400\" \n                        frameborder=\"0\" \n                        allowfullscreen \n                        allow=\"microphone; camera; display-capture\">\n                    </iframe>\n                </div>\n            `;\n\n            editor.insertContent(embedHtml);\n            modal.hide();\n            window.removeEventListener('message', receiveMessage);\n        };\n\n        window.addEventListener('message', receiveMessage);\n\n        modal.getRoot().on('hidden.bs.modal', () => {\n            window.removeEventListener('message', receiveMessage);\n        });\n    } catch (error) {\n        console.error('Error creando la modal de PuMuKIT:', error);\n    }\n};\n"],"names":["PumukitModal","Modal","static","registerEventListeners","this","setRemoveOnClose","super","registerCloseOnCancel","registerModalType","pluginName","urlOption","getPluginOptionName","titleOption","usernameOption","emailOption","hashOption","async","editor","modaltitle","options","get","getDialogTitle","pumukitUrl","getPumukitUrl","hash","getHash","username","getUsername","email","getEmail","lang","document","documentElement","context","modal","create","templateContext","large","show","getRoot","one","find","on","e","preventDefault","$","tab","receiveMessage","event","data","mmId","url","playlist","embedUrl","embedHtml","insertContent","hide","window","removeEventListener","addEventListener","error","console"],"mappings":"oFAWe,MAAMA,UAAqBC,EACtCC,YAAc,0BACdA,gBAAkB,0BAElB,sBAAAC,GACIC,KAAKC,kBAAiB,GACtBC,MAAMH,yBACNC,KAAKG,uBACb,EAGAP,EAAaQ;;;;;;;ACAN,MAAMC,EAAa,2BCZpBC,EAAYC,EAAAA,oBAAoBF,EAAY,mBAC5CG,EAAcD,EAAAA,oBAAoBF,EAAY,eAC9CI,EAAiBF,EAAAA,oBAAoBF,EAAY,YACjDK,EAAcH,EAAAA,oBAAoBF,EAAY,SAC9CM,EAAaJ,EAAAA,oBAAoBF,EAAY;;;;;;6BCHhBO,MAAOC,IACtC,MAAMC,ED6BoB,CAACD,GAAWA,EAAOE,QAAQC,IAAIR,GC7BtCS,CAAeJ,GAC5BK,ED2BmB,CAACL,GAAWA,EAAOE,QAAQC,IAAIV,GC3BrCa,CAAcN,GAC3BO,ED8Ba,CAACP,GAAWA,EAAOE,QAAQC,IAAIL,GC9BrCU,CAAQR,GACfS,ED2BiB,CAACT,GAAWA,EAAOE,QAAQC,IAAIP,GC3BrCc,CAAYV,GACvBW,ED2Bc,CAACX,GAAWA,EAAOE,QAAQC,IAAIN,GC3BrCe,CAASZ,GACjBa,EAAOC,SAASC,gBAAgBF,MAAQ,KAExCG,EAAU,CACZf,aACAI,aACAE,OACAE,WACAE,QACAE,QAGJ,IACI,MAAMI,QAAclC,EAAamC,OAAO,CACpCC,gBAAiBH,EACjBI,OAAO,IAGXH,EAAMI,OAENJ,EAAMK,UAAUC,IAAI,kBAAkB,KACrBN,EAAMK,UACdE,KAAK,eAAeC,GAAG,SAAS,SAAUC,GAC3CA,EAAEC,iBACFC,EAAEzC,MAAM0C,IAAI,OAC5B,OAGQ,MAAMC,EAAkBC,IACpB,MAAMC,EAAOD,EAAMC,KACnB,IAAKA,IAAUA,EAAKC,OAASD,EAAKE,MAAQF,EAAKG,SAAW,OAE1D,IAAIC,EAAW,GACXJ,EAAKE,IACLE,EAAWJ,EAAKE,IACTF,EAAKG,SACZC,EAAW,GAAG/B,oCAA6C2B,EAAKG,WACzDH,EAAKC,OACZG,EAAW,GAAG/B,2BAAoC2B,EAAKC,QAG3D,MAAMI,EAAY,+LAICD,mTAUnBpC,EAAOsC,cAAcD,GACrBpB,EAAMsB,OACNC,OAAOC,oBAAoB,UAAWX,IAG1CU,OAAOE,iBAAiB,UAAWZ,GAEnCb,EAAMK,UAAUG,GAAG,mBAAmB,KAClCe,OAAOC,oBAAoB,UAAWX,KAE7C,CAAC,MAAOa,GACLC,QAAQD,MAAM,qCAAsCA,EAC5D"}