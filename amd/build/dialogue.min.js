define(["exports","core/modal","editor_tiny/options"],(function(e,t,i){"use strict";class o extends t{static TYPE="tiny_pumukitmedia/modal";static TEMPLATE="tiny_pumukitmedia/modal";registerEventListeners(){this.setRemoveOnClose(!0),super.registerEventListeners(),this.registerCloseOnCancel()}}o.registerModalType();
/**
     * Tiny Pumukitmedia common values.
     *
     * @module      tiny_pumukitmedia/common
     * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
     */
const n="tiny_pumukitmedia/plugin",s=i.getPluginOptionName(n,"pumukitmediaurl"),a=i.getPluginOptionName(n,"dialogtitle"),l=i.getPluginOptionName(n,"username"),r=i.getPluginOptionName(n,"email"),m=i.getPluginOptionName(n,"hash"),d=i.getPluginOptionName(n,"showpr"),u=i.getPluginOptionName(n,"showplaylist"),g=i.getPluginOptionName(n,"showsharedvideos");
/**
     * Options helper for the Moodle Tiny Pumukitmedia plugin.
     *
     * @module      tiny_pumukitmedia/options
     * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
     */e.openPumukitDialogue=async e=>{const t=(e=>e.options.get(a))(e),i=(e=>{const t=e.options.get(s);return"string"==typeof t?t.trim():""})(e),n=(e=>e.options.get(m))(e),p=(e=>e.options.get(l))(e),c=(e=>e.options.get(r))(e),h=document.documentElement.lang||"en",v=(e=>e.options.get(d))(e),y=(e=>e.options.get(u))(e),w=(e=>e.options.get(g))(e),k={modaltitle:t,pumukitUrl:i,hash:n,username:p,email:c,lang:h,showpr:v,showplaylist:y,showsharedvideos:w};try{const t=await o.create({templateContext:k,large:!0});t.show(),t.getRoot().on("click",".nav-tabs .nav-link",(function(e){e.preventDefault();const i=t.getRoot()[0],o=e.target,n=o.getAttribute("href");i.querySelectorAll(".nav-tabs .nav-link").forEach((e=>{e.classList.remove("active")})),i.querySelectorAll(".tab-pane").forEach((e=>{e.classList.remove("show","active")})),o.classList.add("active"),i.querySelector(n).classList.add("show","active")}));const n=o=>{const s=o.data;if(!s||!s.mmId&&!s.url&&!s.playlist)return;let a="";s.url?a=s.url:s.playlist?a=`${i}/openedx/openedx/playlist/embed/${s.playlist}`:s.mmId&&(a=`${i}/openedx/openedx/embed/${s.mmId}`);const l=`<a href="${a}" target="_blank" class="pumukit-media-link">${a}</a>`;e.insertContent(l),t.hide(),window.removeEventListener("message",n)};window.addEventListener("message",n),t.getRoot().on("hidden.bs.modal",(()=>{window.removeEventListener("message",n)}))}catch(e){console.error("Error creando la modal de PuMuKIT:",e)}}}));
//# sourceMappingURL=dialogue.min.js.map
